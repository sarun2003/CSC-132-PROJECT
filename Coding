# IMPORT LIBRARIES

import cv2 # THIS LIBRARY IS FOR OBJECT DETECTION
import pyttsx3 # THIS ONE IS FOR TEXT TO SPEECH

import numpy as np



def objectDetection(frame):

    # OBJECT DETECTION LOGIC GOES HERE

    #############################
    # EARLY TEST WITH RED OBJECT#
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    lower_red = np.array([0, 100, 100])
    upper_red = np.array([10, 255, 255])
    mask = cv2.inRange(hsv, lower_red, upper_red)
    #############################

    # FIND CONTOURS
    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    if contours:
        x, y, w, h = cv2.boundingRect(contours[0])
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
        object_name = "Red Object"  # Change this based on your actual object

        print("Detected:", object_name)
        
        # USING TEXT TO SPEECH, SAYS THE OBJECT NAME ALOUD.
        speak(object_name)

    return frame




def speak(text):
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()


########################################################################

def main():
    # OPENING THE WEBCAM
    cap = cv2.VideoCapture(0)

    while True:
        # GET A FRAME FROM THE WEBCAM
        ret, frame = cap.read()

        # EXECUTE OBJECT DETECTION
        frame_with_detection = objectDetection(frame)

        # DISPLAYING THE FRAME
        cv2.imshow('Object Detection', frame_with_detection)

        # PRESSING "Q" EXITS THE PROGRAM
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # CLOSE PROGRAM
    cap.release()
    cv2.destroyAllWindows()


if __name__ == "__main__":
    main()
